"use strict";(self.webpackChunklibs_documentations=self.webpackChunklibs_documentations||[]).push([[637],{9613:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2639:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var a=n(2848),r=n(9213),o=(n(9496),n(9613)),i=["components"],s={id:"inputs",title:"Inputs",sidebar_label:"Inputs"},l=void 0,p={unversionedId:"core/inputs",id:"core/inputs",title:"Inputs",description:"Throughout the documentations, we will encounter many types of Inputs that NGT works with. This page attempts to explain those types",source:"@site/docs/core/inputs.mdx",sourceDirName:"core",slug:"/core/inputs",permalink:"/docs/core/inputs",editUrl:"https://github.com/nartc/angular-three/tree/main/libs/documentations/docs/docs/core/inputs.mdx",tags:[],version:"current",frontMatter:{id:"inputs",title:"Inputs",sidebar_label:"Inputs"},sidebar:"docs",previous:{title:"Our first scene",permalink:"/docs/first-scene"},next:{title:"Canvas",permalink:"/docs/core/canvas"}},c={},u=[{value:"Constructor Arguments",id:"constructor-arguments",level:2},{value:"Options",id:"options",level:2},{value:"Shortcuts",id:"shortcuts",level:3},{value:"<code>BooleanInput</code>",id:"booleaninput",level:3},{value:"<code>NumberInput</code>",id:"numberinput",level:3},{value:"<code>Ngt***</code>",id:"ngt",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Throughout the documentations, we will encounter many types of Inputs that NGT works with. This page attempts to explain those types"),(0,o.kt)("h2",{id:"constructor-arguments"},"Constructor Arguments"),(0,o.kt)("p",null,"While consulting THREE.js documentations, we will come across objects that can be constructed by passing in different arguments in the constructor."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const sphereGeometry = new THREE.SphereGeometry(1, 32, 32);\n")),(0,o.kt)("p",null,"NGT supports ",(0,o.kt)("strong",{parentName:"p"},"Constructor Arguments")," by providing ",(0,o.kt)("inlineCode",{parentName:"p"},"[args]")," Input on various objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-sphere-geometry [args]="[1, 32, 32]"></ngt-sphere-geometry>\n')),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"NGT objects that use ",(0,o.kt)("inlineCode",{parentName:"p"},"[args]")," will be reconstructed when ",(0,o.kt)("inlineCode",{parentName:"p"},"[args]")," changes"))),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("p",null,"Along with ",(0,o.kt)("strong",{parentName:"p"},"Constructor Arguments"),", an object might have a list of Inputs that object accepts as ",(0,o.kt)("strong",{parentName:"p"},"options"),". Options are usually optional when constructing said THREE.js object and will ",(0,o.kt)("strong",{parentName:"p"},"not")," reconstruct the object upon changed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const light = new THREE.AmbientLight('white', 1); // color and intensity\n// or\nconst secondLight = new THREE.AmbientLight();\nsecondLight.color.set('white');\nsecondLight.intensity = 1;\n")),(0,o.kt)("p",null,"NGT supports similar concept"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-ambient-light color="white" intensity="1"></ngt-ambient-light>\n')),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When to use ",(0,o.kt)("strong",{parentName:"p"},"Constructor Arguments")," versus when to use ",(0,o.kt)("strong",{parentName:"p"},"options")," is a case-by-case decision as we work on our scene graph."))),(0,o.kt)("h3",{id:"shortcuts"},"Shortcuts"),(0,o.kt)("p",null,"In the previous example about ",(0,o.kt)("inlineCode",{parentName:"p"},"THREE.AmbientLight"),", we see that we use ",(0,o.kt)("inlineCode",{parentName:"p"},"color.set()")," to set the color of the light. Such method (",(0,o.kt)("inlineCode",{parentName:"p"},"set()"),") is a ",(0,o.kt)("em",{parentName:"p"},"shortcut"),". NGT attempts to call the ",(0,o.kt)("em",{parentName:"p"},"shortcut")," methods automatically on various options: ",(0,o.kt)("inlineCode",{parentName:"p"},"position"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"color"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"scale"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"rotation")," etc..."),(0,o.kt)("h3",{id:"booleaninput"},(0,o.kt)("inlineCode",{parentName:"h3"},"BooleanInput")),(0,o.kt)("p",null,"In Angular, we would have to pass ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," to a ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")," Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-mesh [castShadow]="true"></ngt-mesh>\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"BooleanInput")," allows us to pass in different variants for ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")," Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-mesh [castShadow]="true"></ngt-mesh>\n<ngt-mesh castShadow></ngt-mesh>\n<ngt-mesh castShadow=""></ngt-mesh>\n')),(0,o.kt)("h3",{id:"numberinput"},(0,o.kt)("inlineCode",{parentName:"h3"},"NumberInput")),(0,o.kt)("p",null,"In Angular, we would have to pass in a ",(0,o.kt)("inlineCode",{parentName:"p"},"number")," to a ",(0,o.kt)("inlineCode",{parentName:"p"},"number")," Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-ambient-light [intensity]="1"></ngt-ambient-light>\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NumberInput")," allows us to pass in different variants for ",(0,o.kt)("inlineCode",{parentName:"p"},"number")," Input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-ambient-light [intensity]="1"></ngt-ambient-light> <ngt-ambient-light intensity="1"></ngt-ambient-light>\n')),(0,o.kt)("h3",{id:"ngt"},(0,o.kt)("inlineCode",{parentName:"h3"},"Ngt***")),(0,o.kt)("p",null,"Throughout the documentations, we will come across ",(0,o.kt)("inlineCode",{parentName:"p"},"NgtVector3"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"NgtEuler")," etc... These are NGT versions of THREE.js counterparts:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NgtVector3")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"THREE.Vector3")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NgtEuler")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"THREE.Euler")),(0,o.kt)("li",{parentName:"ul"},"...")),(0,o.kt)("p",null,"Because NGT automatically deals with ",(0,o.kt)("a",{parentName:"p",href:"#shortcuts"},"Shortcuts"),", NGT provides more relaxed types for these Inputs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!--                  \ud83d\udc47 instead of constructing THREE.Vector3(1, 2, 3) --\x3e\n<ngt-mesh [position]="[1, 2, 3]"></ngt-mesh>\n\x3c!--                \ud83d\udc47 instead of constructing THREE.Vector3(1.5, 1.5, 1.5) --\x3e\n<ngt-mesh [scale]="1.5"></ngt-mesh>\n')))}d.isMDXComponent=!0}}]);